import org.ifcx.extractor.ExtractSentences
import org.ifcx.extractor.ExtractJavadoc
import org.ifcx.extractor.GATE_Task
import org.ifcx.extractor.SplitJavadocSentences

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'ratpack'


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.augusttechgroup:ratpack-plugin:0.5.1'
    }
}

dependencies {
    compile files('/Users/jim/Projects/GATE/release-7.1/bin/gate.jar')
    compile('uk.ac.gate:gate-core:7.1')
    compile gradleApi()
    groovy 'org.codehaus.groovy:groovy:1.8.9'
}

sourceSets {
    main {
        java {
            srcDir 'open_jdk_tools/src/main/java'
        }
    }
}

def method_abstracts_dir = file('data/extracts')

task extractJavadoc(type: ExtractJavadoc) {
    source = sourceSets.main.java
    destinationDir = file('tmp/classes')
    classpath = files()
    options.compilerArgs = ['-printsource']

    htmlReport = file('data/report.html')
    methodAbstracts = method_abstracts_dir
}

task tagSentences(type: GATE_Task)  {
    source = files('data/report.html')
    gateApp = file('tokenizer.xgapp')
    outputDirectory = file('tmp/taggedHtml')
}

task splitSentences(type: SplitJavadocSentences, dependsOn: extractJavadoc)  {
    parseCommentHTML = true
    inputDirectory = method_abstracts_dir
    gateApp = file('tokenizer.xgapp')
    outputDirectory = file('data/methods')
}

task extractSentences(type: ExtractSentences, dependsOn: splitSentences)  {
    source = 'data/methods'
    include = /.*\.html$/

    extractionIndex = file('data/comments-index.txt')
    extractedSentences = file('data/comments.txt')
}
